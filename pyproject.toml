[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ado-mcp"
version = "0.0.1"
description = "An MCP server for Azure DevOps pipelines."
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    {name = "Russell Boley", email="countrypeaches@gmail.com"}
]
keywords = [
    "azure-devops", "mcp", "model-context-protocol", "ci-cd", "pipelines", 
    "automation", "devops", "azure", "llm", "ai-tools"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Typing :: Typed",
]
dependencies = [
    "fastmcp>=2.10.0",
    "requests>=2.30.0",
    "python-dotenv>=1.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-exporter-otlp-proto-http>=1.20.0",
    "PyYAML>=6.0.0",
    "python-levenshtein>=0.27.1",
]

[project.scripts]
ado-mcp = "server:main"

[project.urls]
Homepage = "https://github.com/raboley/ado-mcp"
Repository = "https://github.com/raboley/ado-mcp"
Issues = "https://github.com/raboley/ado-mcp/issues"
Documentation = "https://ado-mcp.readthedocs.io/"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-xdist>=3.6.0",
    "pytest-timeout>=2.1.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests>=2.30.0",
    "types-PyYAML>=6.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
    "myst-parser>=2.0.0",
    "sphinx-autobuild>=2024.2.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
]

[tool.setuptools]
py-modules = ["server"]
packages = ["ado", "ado.pipelines"]

[tool.setuptools.package-data]
ado = ["py.typed"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"create_*.py" = ["B904"]  # Allow exception handling without 'from' in setup scripts
"src/test_config.py" = ["B904"]  # Allow exception handling without 'from' in test config
"tests/work_items/test_connection_pooling.py" = ["B017"]  # Allow generic exception testing
"tests/conftest.py" = ["E722"]  # Allow bare except in test configuration
"ado/work_items/field_validators.py" = ["E722"]  # Allow bare except in field validation

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.coverage.run]
source = ["ado", "server"]

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
no_implicit_optional = false
strict_optional = false
check_untyped_defs = false
warn_unused_ignores = false
warn_redundant_casts = false
disable_error_code = [
    "call-overload",
    "operator", 
    "assignment",
    "method-assign",
    "attr-defined",
    "arg-type",
    "var-annotated",
    "call-arg",
    "return-value",
    "return",
]
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "src/",
    "scripts/",
    "create_.*\\.py$",
    "ado/utils/fuzzy_matching.py",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-xdist>=3.8.0",
    "pytest-timeout>=2.1.0",
    "ruff>=0.12.3",
]
